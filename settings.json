/* 
   use Surendar Yama Extension Pack
*/
{
  "workbench.colorTheme": "surendar",
  "editor.fontFamily": "operator mono lig",
  "terminal.integrated.defaultProfile.windows": "Git Bash",
  "editor.minimap.enabled": false,
  "workbench.productIconTheme": "fluent-icons",
  "editor.lineHeight": 40,
  "editor.cursorStyle": "block",
  "editor.fontWeight": "bold",
  "editor.fontSize": 13,
  "workbench.colorCustomizations": {
    "editorCursor.foreground": "#fecc1b",
    "activityBar.activeBorder": "#fecc1b",
    "icon.foreground": "#fecc1b",
    "editorSuggestWidget.selectedBackground": "#0d0d0d",
    // surendar yama black color theme...
    "editor.background": "#0d0d0d",
    "statusBar.background": "#0d0d0d",
    "sideBar.background": "#0d0d0d",
    "titleBar.activeBackground": "#0d0d0d",
    "tab.inactiveBackground": "#0d0d0d",
    "activityBar.background": "#0d0d0d",
    "dropdown.background": "#0d0d0d"
  },
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      {
        "scope": [
          //following will be in italic (=FlottFlott)\
          "property",
          "comment",
          "emphasis",
          "entity.name.method.js",
          "entity.name.class.js",
          "entity.name.tag.doctype",
          "entity.other.attribute-name",
          "entity.other.attribute-name.tag.jade",
          "entity.other.attribute-name.tag.pug",
          "keyword",
          "keyword.control",
          "keyword.operator.comparison",
          "keyword.control.flow.js",
          "keyword.control.flow.ts",
          "keyword.control.flow.tsx",
          "keyword.control.ruby",
          "keyword.control.module.ruby",
          "keyword.control.class.ruby",
          "keyword.control.def.ruby",
          "keyword.control.loop.js",
          "keyword.control.loop.ts",
          "keyword.control.import.js",
          "keyword.control.import.ts",
          "keyword.control.import.tsx",
          "keyword.control.from.js",
          "keyword.control.from.ts",
          "keyword.control.from.tsx",
          "keyword.operator.expression.delete",
          "keyword.operator.new",
          "keyword.operator.expression",
          "keyword.operator.cast",
          "keyword.operator.relational",
          "keyword.operator.sizeof",
          "keyword.operator.logical.python",
          "italic",
          "markup.italic",
          "markup.quote",
          "markup.changed",
          "markup.italic.markdown",
          "markup.quote.markdown",
          "markup.deleted.diff",
          "markup.inserted.diff",
          "meta.delimiter.period",
          "meta.diff.header.git",
          "meta.diff.header.from-file",
          "meta.diff.header.to-file",
          "meta.tag.sgml.doctype",
          "meta.var.expr",
          "meta.class meta.method.declaration meta.var.expr storage.type.js",
          "meta.decorator punctuation.decorator",
          "meta.selector",
          "punctuation.accessor",
          "punctuation.definition.comment",
          "punctuation.definition.template-expression.begin",
          "punctuation.definition.template-expression.end",
          "punctuation.section.embedded",
          "quote",
          "source.js constant.other.object.key.js string.unquoted.label.js",
          "storage",
          "storage.type",
          "storage.modifier",
          "storage.type.property.js",
          "storage.type.property.ts",
          "storage.type.property.tsx",
          "tag.decorator.js entity.name.tag.js",
          "tag.decorator.js",
          "text.html.basic entity.other.attribute-name.html",
          "text.html.basic entity.other.attribute-name",
          "variable.language",
          "variable.other.object.property",
          "variable.object.property.ts",
          "variable.object.property.js",
          "meta.method.declaration.ts",
          "meta.method.declaration.js",
          "meta.block.ts",
          "meta.block.js",
          "meta.object.member.ts",
          "meta.object.member.js",
          "entity.name",
          "entity.name.type.class.ts",
          "entity.name.type.class.js",
          "source.css",
          "string.quoted.double.js",
          "string.quoted.double.ts",
          "variable.other.readwrite.js",
          "variable.other.readwrite.ts",
          "source.js",
          "source.ts",
          "string.quoted.double.html",
          "text.html.derivative",
          "source.json"
        ],
        "settings": {
          "fontStyle": "italic"
        }
      },
      {
        "scope": [
          "variable.other.property.js",
          "variable.other.object.property.js",
          "variable.other.readwrite.alias.js",
          "meta.block.js",
          "meta.import.js",
          "source.js",
          "variable.other.property.ts",
          "variable.other.object.property.ts",
          "variable.other.readwrite.alias.ts",
          "meta.block.ts",
          "meta.import.ts",
          "source.ts"
        ],
        "settings": {
          "foreground": "#fb923c"
        }
      },
      {
        "scope": [
          "meta.import.js",
          "entity.name.function.js",
          "source.js",
          "meta.import.ts",
          "entity.name.function.ts",
          "source.ts"
        ],
        "settings": {
          "foreground": "#fecc1b"
        }
      },
      {
        "scope": [
          "punctuation.definition.string.begin.js",
          "punctuation.definition.string.end.js",
          "string.quoted.double.js",
          "punctuation.definition.string.begin.ts",
          "punctuation.definition.string.end.ts",
          "string.quoted.double.ts"
        ],
        "settings": {
          "foreground": "#a3e635"
        }
      },
      {
        "scope": ["string", "punctuation"],
        "settings": {
          "foreground": "#a3e635"
        }
      },
      {
        "scope": [
          "punctuation.support.type.property-name.begin.json.comments",
          "punctuation.support.type.property-name.end.json.comments",
          "support.type.property-name.json.comments",
          "string.json.comments",
          "meta.structure.dictionary.json.comments",
          "meta.structure.dictionary.value.json.comments",
          "meta.structure.dictionary.json.comments",
          "source.json.comments"
        ],
        "settings": {
          "foreground": "#C792EA"
        }
      }
    ]
  },
  "liveServer.settings.donotShowInfoMsg": true,
  "editor.fontLigatures": true,
  "git.autofetch": true,
  "security.workspace.trust.untrustedFiles": "open",
  "terminal.integrated.defaultProfile.linux": "bash",
  "workbench.startupEditor": "none",
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.formatOnSave": true,
  "css.lint.unknownAtRules": "ignore",
  "workbench.iconTheme": "vscode-icon-theme",
  "git.confirmSync": false,
  "window.zoomLevel": 1,
  "editor.guides.bracketPairs": true,
  "editor.tabSize": 2,
  "terminal.integrated.env.windows": {},
}
